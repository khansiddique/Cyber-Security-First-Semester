factorial(50)/(factorial(40)*factorial(10))
dataFile=read.csv('moth-trap-experiment.csv',sep=',', header = TRUE)
setwd("C:\\Users\\HP\\Documents\\R Lecture\\")
dataFile=read.csv('moth-trap-experiment.csv',sep=',', header = TRUE)
locationTop<- dataFile[dataFile$location=='TOp',]
dataFile$location=='TOp'
dataFile$location=='Top'
locationTop
View(locationTop)
View(dataFile)
locationTop<- dataFile[dataFile$location=="Top",]
locationTop
mean(locationTop)
mean(locationTop$number.of.moths)
summary(dataFile)
summary(locationTop)
library(ggplot2)
library(splines)
qqplot(dataFile$location, dataFile$number.of.moths, data=dataFile)
qqplot(dataFile$type.of.lure, dataFile$number.of.moths, data=dataFile)
for loc1 in unique((dataFile$location)){
for loc2 in unique(dataFile$location){
if(loc1!=loc2){
v<-var.test(dataFile[dataFile$location==loc1,]$number.of.moths,
dataFile$location==loc2,]$number.of.moths,)
}
}
}
v<-var.test(dataFile[dataFile$location==loc1,]$number.of.moths,
dataFile[dataFile$location==loc2,]$number.of.moths)
v<-var.test(dataFile[dataFile$location==loc1,]$number.of.moths,dataFile[dataFile$location==loc2,]$number.of.moths)
v<-var.test(dataFile[dataFile$location==loc1,]$number.of.moths,dataFile[dataFile$location==loc2,]$number.of.moths)
dataFile=read.csv('moth-trap-experiment.csv',sep=',', header = TRUE)
v<-var.test(dataFile[dataFile$location==loc1,]$number.of.moths,dataFile[dataFile$location==loc2,]$number.of.moths)
for (loc1 in unique(dataFile$location)){
for (loc2 in unique(dataFile$location)){
if(loc1!=loc2){
v<-var.test(dataFile[dataFile$location==loc1,]$number.of.moths,dataFile[dataFile$location==loc2,]$number.of.moths)
print(c(loc1,loc2, v$p.value))
}
}
}
for (loc1 in unique(dataFile$location)){
for (loc2 in unique(dataFile$location)){
if(loc1!=loc2){
v<-var.test(dataFile[dataFile$location==loc1,]$number.of.moths,dataFile[dataFile$location==loc2,]$number.of.moths)
print(c(loc1,loc2, v$p.value))
}
}
}
for (lure1 in unique(dataFile$location)){
for (lure2 in unique(dataFile$location)){
if(lure1!=lure2){
v<-var.test(dataFile[dataFile$location==lure1,]$number.of.moths,
dataFile[dataFile$location==lure2,]$number.of.moths)
print(c(lure1,lure2, v$p.value))
}
}
}
for (lure1 in unique(dataFile$type.of.lure)){
for (lure2 in unique(dataFile$type.of.lure)){
if(lure1!=lure2){
v<-var.test(dataFile[dataFile$location==lure1,]$number.of.moths,
dataFile[dataFile$location==lure2,]$number.of.moths)
print(c(lure1,lure2, v$p.value))
}
}
}
for (lure1 in unique(dataFile$type.of.lure)){
for (lure2 in unique(dataFile$type.of.lure)){
if(lure1!=lure2){
v<-var.test(dataFile[dataFile$type.of.lure==lure1,]$number.of.moths,
dataFile[dataFile$type.of.lure==lure2,]$number.of.moths)
print(c(lure1,lure2, v$p.value))
}
}
}
wilcox.test(dataFile[dataFile$type.of.lure=="chemical",]$number.of.moths,
dataFile[dataFile$type.of.lure=="Sugar",]$number.of.moths,
alternative = "greater")
wilcox.test(dataFile[dataFile$type.of.lure=="Chemical",]$number.of.moths,
dataFile[dataFile$type.of.lure=="Sugar",]$number.of.moths,
alternative = "greater")
wilcox.test(dataFile[dataFile$type.of.lure=="Sugar",]$number.of.moths,
dataFile[dataFile$type.of.lure=="Scent",]$number.of.moths,
alternative = "greater")
wilcox.test(dataFile[dataFile$type.of.lure=="Chemical",]$number.of.moths,
dataFile[dataFile$type.of.lure=="Sugar",]$number.of.moths,
alternative = "greater")
wilcox.test(dataFile[dataFile$type.of.lure=="Chemical",]$number.of.moths,
dataFile[dataFile$type.of.lure=="Scent",]$number.of.moths,
alternative = "greater")
wilcox.test(dataFile[dataFile$type.of.lure=="Sugar",]$number.of.moths,
dataFile[dataFile$type.of.lure=="Scent",]$number.of.moths,
alternative = "greater")
qqplot(dataFile$type.of.lure, dataFile$number.of.moths, data=dataFile)
m<-aov(number.of.moths~location, data=dataFile)
summary.aov(m)
m1<-aov(number.of.moths~location, data=dataFile)
summary.aov(m1)
m2<-aov(number.of.moths~location*type.of.lure, data=dataFile)
summary.aov(m2)
m1<-aov(number.of.moths~location, data=dataFile)
summary.aov(m1)
m2<-aov(number.of.moths~location*type.of.lure, data=dataFile)
summary.aov(m2)
m3<-aov(number.of.moths~type.of.lure, data=dataFile)
summary.aov(m3)
AIC(m1)
AIC(m2)
AIC(m3)
BIC(m1)
BIC(m2)
BIC(m3)
install.packages("caret")
library(caret)
